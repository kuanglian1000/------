Q0.如何變更專案名稱？(在複製原有專案後,Rename package)
  https://google-developer-training.github.io/android-developer-fundamentals-course-concepts-v2/appendix/appendix-utilities/appendix-utilities.html#copy_project

  # 這裡要一起改,不然專案開起來,Android Studio最上方標題還是顯示舊名稱
  Android
    Gradle Scripts
      settings.gradle (Project Settings) # file
        rootProject.name = "P22LifecycleAndState" 
        # OldName = "P21TwoActivities" , NewName="P22LifecycleAndState"
        
  # Grandle File要更新
  File > Sync Project with Gradle Files.

Q0.✱✱VIP✱✱(設定有錯,功能一定出不來,...會陷入無助,開始懷疑人生...)
   引用套件新舊切換步驟，所有的android.support.v4 & android.support.v7的套件
   都被整合到androidx.XXX裡面了。如果升級步驟有漏, 功能就不會動。
   [例]：
      舊：
        import android.support.design.widget.NavigationView;
        import android.support.v4.view.GravityCompat;
        import android.support.v4.widget.DrawerLayout;
        import android.support.v7.app.ActionBarDrawerToggle;
        import android.support.v7.app.AppCompatActivity;
        import android.support.v7.widget.Toolbar;
      新：
        import com.google.android.material.navigation.NavigationView;
        import androidx.core.view.GravityCompat;
        import androidx.drawerlayout.widget.DrawerLayout;
        import androidx.appcompat.app.ActionBarDrawerToggle;
        import androidx.appcompat.app.AppCompatActivity;
        import androidx.appcompat.widget.Toolbar;
    [升級步驟]：
      1.程式碼內調整引用套件名稱, 詳上例
      2.調整build.grandle(Module: xxx.app)
          dependencies {
              api 'androidx.appcompat:appcompat:1.3.0-beta01'
              api 'com.google.android.material:material:1.3.0'
              implementation 'com.android.support:design:28.0.0'
          }
      3.調整gradle.properties(Project Properties)
          android.useAndroidX=true
          android.enableJetifier=true

Q1.CommonAttribute找不到textAlignment(文字定位按鈕)怎麼辦？
  A1.調整 build.gradle(Module: XXX)內容 , 
    defaultConfig {
        applicationId "android.com.myfirstappadvanced"
        minSdkVersion 17 //16->17,Open textAlignment in Common Attribute

Q2.Layout 觀念
  1.所有的VIEWS都必須有 layout_width & layout_height 兩個屬性
  2.match_parent or match_constraint or wrap_content
  ConstraintLayout 它是這個Fragment的 root View 
    layout_width = match_parent 
    layout_height = match_parent
    =>  表示會依裝置自動調整大小

  match_constraint => 塞滿 ConstraintLayout
  wrap_content => 長的跟內容一樣大(+padding)

Q3.Task:Add Views and constraints
  Top == '上'
  Bottom == '下'
  Start == '左'
  End == '右'
  
  app:layout_constraintBottom_toBottomOf="parent"
  app:layout_constraintEnd_toEndOf="parent"
  app:layout_constraintStart_toStartOf="parent"
  app:layout_constraintTop_toTopOf="parent" />

Q4.✱開發✱ JAVA or Android 程式如何偵錯呢？
  A4.★一定要會用LOG進行偵錯，請使用 Log.d("countMe", intCount.toString()); 寫出LOG資訊。
    再用 6:LogCat 視窗觀察 Log 資訊。
    AndroidStudio 確實也有 DEBUG功能(Shift + F9)，可以逐步看物件內容及參數值，但是太仔細了，會看到昏倒...都還沒看到你要的結果。

Q5.使用 Nav_graph.xml 在Fragment間傳遞參數的重點。
  A5.> 如果是 FragmentA -> FragmentB , 參數必須定義 FragmentB 裡面 , 不是放在 FragmentA
     > 設定變更(nav_graph.xml) , 記得重新執行 [Build > Make Project] 指令, 才會自動產生相關類別
        <?xml version="1.0" encoding="utf-8"?>
          <navigation xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:app="http://schemas.android.com/apk/res-auto"
            xmlns:tools="http://schemas.android.com/tools"
            android:id="@+id/nav_graph"
            app:startDestination="@id/FirstFragment">

            <fragment
                android:id="@+id/FirstFragment"
                android:name="android.com.myfirstappadvanced.FirstFragment"
                android:label="@string/first_fragment_label"
                tools:layout="@layout/fragment_first">
                <action
                    android:id="@+id/action_FirstFragment_to_SecondFragment"
                    app:destination="@id/SecondFragment"/>
            </fragment>
            <fragment
                android:id="@+id/SecondFragment"
                android:name="android.com.myfirstappadvanced.SecondFragment"
                android:label="@string/second_fragment_label"
                tools:layout="@layout/fragment_second">
                <!--重點在這裡-->
                <argument
                    android:name="myVar"
                    app:argType="integer" />
                <action
                    android:id="@+id/action_SecondFragment_to_FirstFragment"
                    app:destination="@id/FirstFragment" />
            </fragment>
        </navigation>
     > 塞資料(FirstFragment.java)
        public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
          super.onViewCreated(view, savedInstanceState);

          view.findViewById(R.id.random_button).setOnClickListener(new View.OnClickListener() {
              @Override
              public void onClick(View view) {
                  int currentCount = Integer.parseInt(showCountTextView.getText().toString());
                  FirstFragmentDirections.ActionFirstFragmentToSecondFragment action
                          = FirstFragmentDirections.actionFirstFragmentToSecondFragment(currentCount); //塞資料
                  NavHostFragment.findNavController(FirstFragment.this).navigate(action);
              }
          });
        }
     > 接資料(SecondFragment.java)
        public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
            super.onViewCreated(view, savedInstanceState);
            Integer count = SecondFragmentArgs.fromBundle(getArguments()).getMyVar(); //接資料
            String countText = getString(R.string.random_heading,count);
            Log.d("test1",String.valueOf(count));
            Log.d("test2",countText);
            showHeaderTextView.setText(countText);
        }

Q6. 1.3:Text and scrolling views (ProjectName:ScrollingText)
  (OK)基本觀念
    View
      TextView => 文字方塊
    FrameLayout
      ScrollView => 可上下左右移動的畫布(十分耗資源,很吃memory,影響其他APP的效能)
        LinearLayout
      RecyclerView => 常用於顯示使用者可CRUD長資料串
  What you'll learn(本章可以學到的內容)
    V How to use XML code to add multiple TextView elements.
    V How to use XML code to define a scrolling View.
    V How to display free-form text with some HTML formatting tags.
    V How to style the TextView background color and text color.
    V How to include a web link in the text.

  (OK)Task 1:Add and edit TextView elements
    > string.xml內字串規則
      >> As you enter or paste text in the strings.xml file, 
          the text lines don't wrap around to the next line—they extend beyond the right margin. This is the correct behavior—each new line of text starting at the left margin represents an entire paragraph. If you want the text in strings.xml to be wrapped, you can press Return to enter hard line endings, or format the text first in a text editor with hard line endings.
      >> Enter \n to represent the end of a line
          , and another \n to represent a blank line. You need to add end-of-line characters to keep paragraphs from running into each other.
      >> If you have an apostrophe (') in your text
          , you must escape it by preceding it with a backslash ('). 
          If you have a double-quote in your text
          , you must also escape it ("). 
          You must also escape any other non-ASCII characters. 
          See the Formatting and styling section of String resources for more details.
      >> Enter the HTML <b> and </b> tags around words that should be in bold.
      >> Enter the HTML <i> and </i> tags around words that should be in italics. If you use curled apostrophes within an italic phrase, replace them with straight apostrophes.
      >> You can combine bold and italics by combining the tags, as in <b><i>... words...</i></b>. Other HTML tags are ignored.
      >> Enclose The entire text within <string name="article_text"> </string> in the strings.xml file.
      Include a web link to test, such as www.google.com. (The example below uses www.rockument.com.) Don't use an HTML tag, because any HTML tags except the bold and italic tags are ignored and presented as text, which is not what you want.
  (OK)Task 2:Add a ScrollView and an active web link
  (OK)Task 3:Scroll multiple elements
    > <ScrollView>裡面只能有一個child View,
    > 如果<多個elements>要一起捲動,外面要再包一層<LinearLayout>
    > <TextView> 裡面可用的HTML標記只有兩個 <b>粗體 & <i>斜體
    > <TextView> 裡面可用 <\n> 換行符號
    > <TextView> 加上 <android:autoLink="web"> 屬性,自動將Text內的連結轉為可點選
    例：<ScrollView>
          <LinearLayout>
            <TextView1>
            <TextView1>
            <TextView1>

Q7. 1.4:Learn to help yourself
  What you'll learn(本章可以學到的內容)
    1.去哪找Android開發資訊和資源
    2.如何新增APP的啟動按鈕ICON
    3.如何尋求協助,開發Android App時
  Task 1:Change the launcher icon(OK)
    1.要把舊的刪除,才會套用新的 Icon Type = 'Launcher Icons',路徑:res/drawable/ic_launcher_foreground.xml & ic_launcher_background.xml
  Task 2:Use project templates(OK)
    2.1 探索Basic Activity架構
      1.Status bar(由Android系統提供並控制) : 最上面那一條顯示時間、訊息提示、電量、網路訊號
      2.app bar(又稱為action bar) : 常作為導覽列
      3.app name(預設為套件名稱,可變更) : AndroidMainfest.xml => android:label="@string/app_name" ; string.xml => app_name = "XXX"
      4.options-menu overflow button(選單鍵) : MainActivity.java / onOptionsItemSelected()方法內會實作選單邏輯 ; res/menu/menu_main.xml , 只有Setting menu會在此指定
      5.CoordinatorLayout ViewGroup(主畫面/畫布) : activity_main.xml | content_main.xml => 畫面設計設定都在這裡面
      6.app's UI elements(顯示項目) : activity_main.xml | content_main.xml => 畫面設計設定都在這裡面
      7.Floating action button(浮動按鈕) : activity_main.xml 內的 FloatingActionButton指定它的外觀 ; MainActivity.java 內同樣會指定 onCreate() & onClick()事件
    2.2 App Template 內容客製化
    2.3 探索如何使用Template新增Activity
      1.Project > Android , right-click <java> Folder
      2.Select <New > Activity > Gallery>
  Task 3:Learn from sample code(OK)
    3.1 Android code samples(探索現有範例來加速學習進程)
      1.File > New > Import Sample
      2.瀏覽你要的範例(範例從初階到進階都有)
    3.2 Use the SDK Manager to install offline documentation(安裝離線文件)
      1.Tools > Android > SDK Manager
      2.click <Android SDK>
  Task 4:Many more resources(OK)
    4.1 Search on <Stack Overflow> using tags(使用標籤在Stack Overflow網站上面找答案)
      1.[android] and [layout] => 用兩個標籤去找
      2.[android] "hello world" => 用一個標籤 & 指定找 "hello world" 相關問題
    4.2 Android code samples(探索現有範例來加速學習進程)上面有很多範例，可以好好利用，並加入你的專案中。

Q8. 2.1:Activities and intents
  重點：
    1.基本觀念:Activity 可視為一個單一畫面(full screen window),每個畫面都是一個activity
    2.當1個新activity啟動,前1個activity就會停止.但系統會保留<前1個activity>在stack裡面(又稱為Back Stack)
    3.(Back Stack)中遵循1個基本邏輯,就是"last in , first out",最晚進的最早送出.
      例:使用者完成<目前activity>並按下Back Button,則<目前activity>被丟棄,<前1個activity>抓出來繼續
    
    4.基本觀念:Intent 可視為activity開始或啟動的觸媒,也可以作為activity間資料傳遞的媒介
    5.Intent種類
      5.1 顯性Intent:明確地知道特定activity的完整類別名稱(知道對象是誰)
      5.2 隱性Intent:不清楚對象是誰,但對動作執行有基本概念

    6.Activity間的關聯性及基本設定,須在 <AndroidMainfest.xml> 檔案內定義, 例:子從關係...
      6.1 startActivity():此方法啟動另一個Activity時,通常不會期待收到回饋
      6.2 startActivityForResult():如果你期待收到回饋,必須使用這個方法

    7.Intent物件可以兩種方式傳遞資料給目標Activity:
      (1)in the data field => 以URI指向特定資料來源
      (2)in the intent <extras>(Bundle) => 資料來源超過1個,可用intent <extras> == Bundle傳遞,它是key/value(DIC)的資料型態
      
  What you'll learn(本章可以學到的內容)
    1.如何新增 Activity
    2.如何定義 父 及 子 Activity for Up navigation.
    3.如何啟動 Activity, 以顯性Intent方式
    4.如何在 Activity 間傳遞資料, 以顯性Intent方式

  Task 1:Create the TwoActivities project(OK)
  Task 2:Create and launch the second Activity(OK)
  Task 3:Send data from the main Activity to second Activity(OK)
  Task 4:Return data back to the main Activity(OK)

  課後問題：
    Q1.What changes are made when you add a second Activity to your app by choosing File > New > Activity and an Activity template?
        新增Activity後,專案會發生什麼改變？
      A1.新增1個Java Class ,1個XML Layout file, AndroidMainfest.xml內加入新Activity設定
    Q2.What happens if you remove the android:parentActivityName and the <meta-data> elements from the second Activity declaration in the AndroidManifest.xml file?
        移除 AndroidMainfest.xml 內SecondActivity的設定值(the android:parentActivityName and the <meta-data>),會發生什麼改變？
      A2.App bar裡面的回上一頁按鈕會消失,因為MainActivity & SecondActivity間的關聯性被移除了
    Q3.Which constructor method do you use to create a new explicit Intent?
        新增一個全新的顯式Intent要用什麼方法呢？
      A3.Intent intent = new Intent(this , SecondActivity.class); // new Intent(Context context , Class<?> class);
    Q4.In the HelloToast app homework, how do you add the current value of the count to the Intent?
        如何利用Intent傳遞多個值呢？(MainActivity)
      A4.使用Intent的Extra方法
          , 建立 Intent intent = new Intent(this, SecondActivity.class); //這裡不要忘了..
          , 塞值 intent.putExtra(key,value);
          , 啟動另一個Activity startActivityForResult(intent,TEXT_REQUEST);
      S4.完整程式碼
        //啟動另一個Activity(1)
        public void launchSecondActivity(View view) {
          Intent intent = new Intent(this, SecondActivity.class);
          String message = mMessageEditText.getText().toString();
          intent.putExtra(EXTRA_MESSAGE,message);
          startActivityForResult(intent,TEXT_REQUEST);
        }

        //接收回傳值(4)
        @Override
        protected void onActivityResult(int requestCode
                , int resultCode, @Nullable Intent data) {
            super.onActivityResult(requestCode, resultCode, data);

            if(requestCode == TEXT_REQUEST){
                if(resultCode == RESULT_OK){
                    String reply = data.getStringExtra(SecondActivity.EXTRA_REPLY);
                    String reply2 = data.getStringExtra(SecondActivity.EXTRA_REPLY2);
                    mReplyHeadTextView.setVisibility(View.VISIBLE);
                    mReplyTextView.setText(reply + "|" + reply2);
                    mReplyTextView.setVisibility(View.VISIBLE);

                }
            }
        }
    Q5.In the HelloToast app homework, how do you display the current count in the second "Hello" Activity?
        如何接收另一個Activity傳來的Intent？(SecondActivity)
      A5.使用Intent的Extra方法
          , 建立1 Intent intent = getIntent();
          , 取值 intent.getStringExtra(key);
          , 建立2 Intent replyIntent = new Intent();
          , 塞值 replyIntent.putExtra(key,value);
          , 設定Activity狀態 setResult(RESULT_OK,replyIntent);
          , 結束Activity後返回呼叫端 finish();
      S5.完整程式碼
        //接收傳入值(2)
        @Override
        protected void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_second);
            mReply = findViewById(R.id.editText_second);

            Intent intent = getIntent();
            String message = intent.getStringExtra(MainActivity.EXTRA_MESSAGE);
            TextView textView = findViewById(R.id.text_message);
            textView.setText(message);
        }

        //回傳呼叫端(3)
        public void returnReply(View view) {
            String reply = mReply.getText().toString();
            Intent replyIntent = new Intent();
            replyIntent.putExtra(EXTRA_REPLY,reply);
            replyIntent.putExtra(EXTRA_REPLY2,"Second Value");

            setResult(RESULT_OK,replyIntent);
            finish();
        }

Q9. 2.2:Activity lifecycle and state
  重點：
    0.在Activity生命週期中,每個階段都有對應方法,例:onCreate(),onStart(),onPause()...
    1.To avoid confusing your users, 
      it's important that you develop your app to prevent unexpected data loss.
    2.妥善保存Activity狀態 is very important.
    3.利用logging statements記錄App狀態的變化

  What you'll learn(本章可以學到的內容)
    1.Activity lifecycle如何運作？
    2.Activity 何時 starts, pauses, stops, destroyed？
    3.Activity狀態變更時, 各對應哪些方法？
    4.動作影響(例:設定改變), 導致Activity lifecycle進入特定事件
    5.在lifecycle事件之間, 如何保留 Activity 狀態？

  Task 1:Add lifecycle callbacks to TwoActivities
    事件:Activity啟動
      onCreate
      onStart
      onResume
    事件:物件點選之類的
      Button Clicked
      onPause
    事件:Activity失去焦點
      onStop
    事件:Activity結束
      onDestroy
    事件:Activity再次取得焦點
      onRestart
      onStart
      onResume
  Task 2:Save and restore the Activity instance state
    1.儘管是旋轉畫面這種小動作,也會導致目前Activity being destroyed.
      如果未考量周全,畫面可能會返回初始畫面及初始值,<使用者狀態>會全數遺失.
    2.保留<使用者狀態>,實作 onSaveInstanceState() 方法.
      系統呼叫上述方法的時點在 onPause() & onStop() 之間
    3.Bundle物件是用來儲存<使用者狀態>,Bundle物件存續期間為目前App Session.
      若要在多個App Session間共用<使用者狀態>,須使用<shared preferences> or <database>
  
    4.回存<使用者狀態>,實作 onRestoreInstanceState() 方法. <==方便作法==>
      系統呼叫上述方法的時點在 onCreate() => onStart() 之後
    5.但是最佳回存<使用者狀態>位置,在 onCreate() 方法內,確保 <UI完成後> 立刻擁有<使用者狀態>

  課後總結：
    1.The Activity lifecycle is a set of states an Activity migrates through, 
      beginning when it is first created and ending when the Android system reclaims the resources for that Activity.
    2.As the user navigates from one Activity to another
      , and inside and outside of your app
      , each Activity moves between states in the Activity lifecycle.
    3.Each state in the Activity lifecycle has a corresponding callback method you can override in your Activity class.
      => <Activity內每個狀態的變化都有相對應的方法>
    4.The lifecycle methods are 
      onCreate()
      , onStart()
      , onPause()
      , onRestart()
      , onResume()
      , onStop()
      , onDestroy().
    5.Overriding a lifecycle callback method allows you to add behavior 
      that occurs when your Activity transitions into that state.
      => <經由覆寫上述方法,加入程式邏輯>
    6.You can add skeleton override methods to your classes in Android Studio 
      with Code > Override.
      => <列出所有你能覆寫的方法>
    7.Device configuration changes 
      such as rotation results in the Activity being destroyed 
      and recreated as if it were new.
      => <當裝置設定改變時,例:旋轉畫面,會造成目前Activity消失並重新建立>
    8.A portion of the Activity state is preserved on a configuration change
      , including the current values of EditText elements. 
      For all other data, you must explicitly save that data yourself.
      => <某些物件會自動保留狀態,例:EditText.
          但其他資料還是必須自行儲存保留>
    9.Save Activity instance state in the onSaveInstanceState() method.
      => <時點：在 onSaveInstanceState()方法內 , 保留狀態值>
    10.Instance state data is stored as simple key/value pairs in a Bundle. 
       Use the Bundle methods to put data into and get data back out of the Bundle.
      => outState.putBundle(key,value); //保留狀態值
      => savedInstanceState.getBoolean(key); //取出狀態值
    11.Restore the instance state in onCreate()
       , which is the preferred way, or onRestoreInstanceState().
      => <時點：在 onCreate() | onRestoreInstanceState()方法內 , 取出狀態值>

  課後問題：
    Q1.If you run the homework app before implementing onSaveInstanceState()
       , what happens if you rotate the device? Choose one:
       A1.<EditText>會自動保留狀態,所以<TextView>內容值會消失,但<EditText>不會
    Q2.What Activity lifecycle methods are called 
       when a device-configuration change (such as rotation) occurs? Choose one:
       A2.當裝置設定變更時(例:旋轉畫面),Android會先刪除現有Activity,再新增一個新的Activity
    Q3.When in the Activity lifecycle is onSaveInstanceState() called? Choose one:
       A3.onStop()之前會呼叫 onSaveInstanceState()方法,也就是在 onPause() & onStop()之間
          onSaveInstanceState() is called before the onStop() method.
    Q4.Which Activity lifecycle methods are best to use for saving data 
       before the Activity is finished or destroyed? Choose one:
       A4.儲存Activity狀態的最佳時機點：onSaveInstanceState() , onPause() & onStop()

Q10. 2.3:Implicit intents (Deep Link or App Link == 開 intent filters接收外部的intent資料)
  重點：
    1.Implicit intents用於,Activity啟動時並不知道會由哪個app或activity提供協助(例:照相,寄信或顯示地圖位置)
      但是Activity須清楚它要哪些服務,並允許其他app或activity提供服務內容.
      這時,它會在 <AndroidMainfest.xml> 內,
      宣告 <intent filters> 說明它可以接受哪些 <Implicit intents> 及 <the types of intents>
    2.Sharing(Sending a piece of information to other people through email or social media) 
      是App目前熱門功能.
      Sharing Action 可利用 <ShareCompat.IntentBuilder> 類別,讓程式員可建立<implicit intent>分享資料
    
    3.<作到快翻臉了...>
      Q:為什麼原始範例作的出來,但是根據網頁步驟卻作不出來呢？
      A:因為<原始範例>使用支援套件
        (import android.support.v4.app.ShareCompat;
         import android.support.v7.app.AppCompatActivity;)
        ,但Android Studios已全部提升至(import androidx.xxx)
        ,如果沒有跟著切換,功能會作不出來
    
    4.使用 explicit intent(顯式intent) 
        總是能夠啟動 <同APP 或 外部APP> 的 Activity , 透過指定<完整套件名稱>的方式.
      接收 implicit intent(隱式intent) 
        必須在<AndroidManifest.xml>內定義<intent filters> , 指定你的activity能接收的intent 種類.
    5.當裝置上的App送出 implicit intent, 
        Android系統會拿intent的action & data與可取得的Activity(includes the right Intent filters)比對
        5.1. 如果只有1個Activity吻合, 則此Activity會接手Intent
        5.2. 如果有多個Activity吻合, 則會跳出App chooser讓使用者自行選擇由哪個App來執行
    
    6.實作implicit Intent 的重點摘要
      Activity1 : 送出 implicit Intent
      
        <MainActivity.java>
          public void openWebsite(View view) {
              // Get the URL text.
              String url = mWebsiteEditText.getText().toString();

              // Parse the URI and create the intent.
              Uri webpage = Uri.parse(url);
              Intent intent = new Intent(Intent.ACTION_VIEW, webpage);

              // Find an activity to hand the intent and start that activity.
              if (intent.resolveActivity(getPackageManager()) != null) {
                  startActivity(intent);
              } else {
                  Log.d("ImplicitIntents", "Can't handle this!");
              }
          }
      Activity2 : 接收 implicit Intent
        <AndroidMainfest.xml> 設定
          <activity android:name=".MainActivity">
              <intent-filter>
                  <action android:name="android.intent.action.MAIN" />
                  <category android:name="android.intent.category.LAUNCHER" />
              </intent-filter>
              
              <!--新增設定在此 action==View,category==可瀏覽,
                  data限定為http://developer.android.com ,
                  如果 http://abc.apple.com 的話,Android就不會丟給這個App處理..-->

              <intent-filter>
                  <action android:name="android.intent.action.VIEW"/>
                  <category android:name="android.intent.category.DEFAULT"/>
                  <category android:name="android.intent.category.BROWSABLE" />
                  <data
                      android:scheme="http"
                      android:host="developer.android.com" />
              </intent-filter>
          </activity>
        <MainActivity.java> 程式邏輯
          protected void onCreate(Bundle savedInstanceState) {
              super.onCreate(savedInstanceState);
              setContentView(R.layout.activity_main);

              Intent intent = getIntent(); //Get implicit intent
              Uri uri = intent.getData(); //intent data 一定是 URI 物件.
              if(uri != null){
                  String strUri = getString(R.string.uri_label)
                          + uri.toString();
                  TextView textView = findViewById(R.id.text_uri_message);
                  textView.setText(strUri);
              }
          }

    7.<ShareCompat.IntentBuilder> 類別讓建立 <implicit intent> 分享資料給 社群軟體或EMAIL更為方便

  目標：
    1.Open a URL in a web browser.
    2.Open a location on a map.
    3.Share text.
  
  What you'll learn(本章可以學到的內容)
    1.如何建立一個 implicit intent, 並使用它的 actions and categories.
    2.如何使用 ShareCompat.IntentBuilder 類別, 建立一個 implicit intent 來分享資料.
    3.如何宣傳App可以接收 implicit intent, 藉由在 AndroidMainfest.xml 宣告 Intent filters來完成.

  Task 1:Create the project and layout
  Task 2:Implement the Open Website button
  Task 3:Implement the Open Location button
  Task 4:Implement the Share This Text button
  Task 5:Receive an implicit Intent(接收外部APP傳來的implicit intent)

  課後挑戰：
    1.新增拍照按鈕,開啟相機功能,回傳呼叫端 by intent
    2.顯示回傳照片檔案 by ImageView
      設定範例：Sample Setting @ AndroidMainfest.xml
        <manifest...>
          <uses-feature android:name="android.hardware.camera2"
          android:required="true"/>
        </manifest>
      程式碼範例：
        public void takePicture(View view) {
            Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
            if(takePictureIntent.resolveActivity(getPackageManager())!= null){
                try{
                    //使用會回傳結果的startActivity
                    startActivityForResult(takePictureIntent,REQUEST_IMAGE_CAPTURE);
                }catch (ActivityNotFoundException e){
                    Log.d("ImplicitIntents", "takePicture Error..");
                }
            }
        }
        
        //覆寫onActivityResult事件,接收回傳值
        @Override
        protected void onActivityResult(int requestCode, int resultCode, Intent data) {
            super.onActivityResult(requestCode, resultCode, data);
            if(requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK) {
                Bundle extras = data.getExtras();
                Bitmap bitmap = (Bitmap) extras.get("data");
                mShowPicImageView.setImageBitmap(bitmap);
            }else{
                Log.d("ImplicitIntents", "Not in..");
            }
        }
  
  課後問題：
    Q1.Which constructor method do you use to create an implicit Intent 
      to launch a camera app?
      A1.new Intent(String action) 
         ex. Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
    Q2.<✱✱VIP✱✱> When you create an implicit Intent object, which of the following is true?
      當你要新增 implicit Intent 物件時,你要注意的點有哪些？
      A2. (1)不要指定特定Activity或其他元件來啟動
          (2)增加一個Intent Action or Intent categories
          (3)在呼叫 startActivity or startActivityForResult前,
             先解析Intent有沒有對應的Activity可以負責
             ex.takePictureIntent.resolveActivity(getPackageManager())!= null
    Q3.Which Intent action do you use to take a picture with a camera app?
      哪個 Intent action 可用來以Camera App進行拍照呢？
      A3. Intent takePicture = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);

Q11. 3.1: The debugger
  Task. 1 Step through your app's execution
    1. Step Over (F8) , 逐步執行
    2. Step In (F7) , 跳進去引用的方式|函式內
    3. Step Out (Shift+F8) , 跳進去後看完,直接回到跳進入的點(返回) 

  Task. 2 Work with Breakpoints
    1. 在Breakpoints上面 , 加上 Condition , 條件吻合才會停在偵錯點 , 不吻合則一直往下跑
    2. Resume (F9) , 繼續執行程式(跳離偵錯模式)
    3. View Breakpoints (Ctrl+Shift+F8) , 查看所有偵錯點及相關設定
    4. Mute Breakpoints , 一次關閉所有偵錯點

  Task. 3 Examine and modify variables
    1. Variable頁籤 , 可動態調整變數值(Set Value F2) , 但保留原輸入參數(原本輸入值不變)
    2. Evaluate Expressions(Alt+F8) , 動態查看變數當下狀態值或方法 , 例:getText() , getHint()..

  課後問題：
    Q1. 輸入欄位留空白,會出現什麼錯誤呢？
      A1. java.lang.NumberFormatException: empty String
    
    Q2. Which function do you perform in the Debug pane in order to execute the current line 
        where the breakpoint is, and then stop at the next line in the code? Choose one:
      A2. Step Out(Shift+F8) , 跳回偵錯點位置
    
    Q3. Which function do you perform in the Debug pane 
        in order to jump to the execution of a method call from the current line where the breakpoint is? Choose one:
      A3. Step Into (F7) , 跳進去看呼叫函式

Q12. 3.2: Unit tests(先跳過)，https://developer.android.com/training/testing/fundamentals)
  重點：
    1. Local Unit Test

  What you'll learn(本章可以學到的內容)
    1.如何組織和執行測試
    2.了解什麼是單元測試(Unit Test)
    3.為你的程式碼撰寫單元測試(Unit Test)
  
  Task 1:Explore and run calculateTest
    1.

  Task 2:Add more unit tests to calculateTest

Q13. 3.3: Support libraries(直接跳過, Android 11 使用 AndroidX 套件組, 官方建議全新專案用這個)
  
  What you'll learn(本章可以學到的內容)
    1.如何識別 Android Studio 安裝的 Android Support Library版本
    2.如何指出 Support Library 在APP內的類別
    3.如何分辨 compileSdkVersion , targetSdkVerion , minSdkVersion 之間的差異
    4.如何看出 deprecated(不推薦) or unavailable(無法取得) APIs

  Task 1:Set up your project to use support libraries
  Task 2:Implement the layout and MainActivity
  Task 3:Implement Button behavior
  
(Template)QXX. 2.3:Activities and intents
  重點：

  What you'll learn(本章可以學到的內容)
    1.
    2.
    3.
    4.

  Task 1:
  Task 2:
  Task 3:
  Task 4:

  課後問題：


